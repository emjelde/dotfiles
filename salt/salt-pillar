#!/bin/bash

# Generate pillar if needed

set -o errexit -o nounset

PILLAR_DIR="${PILLAR_DIR:-/srv/pillar}"
SALT_KEYS="${SALT_KEYS:-/etc/salt/gpgkeys}"

if [ ! -d "$SALT_KEYS" ] && [ ! -d "$PILLAR_DIR" ]; then
   echo "[WARN] Generating mock ${PILLAR_DIR}"
   umask 077
   # The mock pillar key uses %transient-key to generate keys faster along with
   # %no-protection to skip passphrase. Salt requires no passphrase as it works
   # in a non-interactive mode.
   mkdir --parents "$SALT_KEYS"
   gpg --quiet --homedir "$SALT_KEYS" --batch --generate-key 2>/dev/null <<-'EOF'
	Key-Type: default
	Subkey-Type: default
	Name-Real: salt-master
	Name-Comment: mock key
	Expire-Date: 0
	%no-protection
	%transient-key
	%commit
	EOF

   # The mock pillar contains a transient SSH private key (id_rsa) with an
   # empty passphrase for unattended key generation. It is encrypted to
   # demonstrate salt.renderers.gpg.
   mkdir --parents "$PILLAR_DIR"
   cat > "${PILLAR_DIR}/top.sls" <<-'EOF'
	base:
	  '*':
	    - dotfiles.ssh
	EOF
   SALT_KEYS_SSH="$(mktemp -d)" && trap "rm -r \"$SALT_KEYS_SSH\"" EXIT
   # -q (silence ssh-keygen)
   # -t (type of key)
   # -N (new passphrase)
   # -f (filename)
   ssh-keygen -q -t rsa -N '' -f "${SALT_KEYS_SSH}/id_rsa"
   gpg --quiet --homedir "$SALT_KEYS" --encrypt --recipient salt-master --armor "${SALT_KEYS_SSH}/id_rsa"
   IDENTITY=$(<"${SALT_KEYS_SSH}"/id_rsa.asc)
   print_identity() {
      echo ".ssh/${1}/id_rsa: |"
      echo "$IDENTITY" | sed 's/^/  /'
   }
   mkdir --parents "${PILLAR_DIR}/dotfiles/ssh"
   cat > "${PILLAR_DIR}/dotfiles/ssh/init.sls" <<-EOF
	#!yaml|gpg
	
	# The salt/salt-pillar script generated the following using a mock gpg and ssh key
	
	$(print_identity bitbucket)
	$(print_identity github)
	$(print_identity visualstudio)
	EOF
else
   if [ ! -d "$SALT_KEYS" ]; then
      (>&2 echo "A salt GPG key '${SALT_KEYS}' is required but a mock key was" \
                "not generated because '${PILLAR_DIR}' already exists.")
      exit 1
   fi

   if [ ! -d "$PILLAR_DIR" ]; then
      (>&2 echo "A pillar '${PILLAR_DIR}' is required but a mock pillar was" \
                "not generated because GPG key '${SALT_KEYS}' already exists.")
      exit 1
   fi
fi
