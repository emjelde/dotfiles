#!/bin/bash

# Prepare the salt state tree

set -o errexit -o nounset

SALT_DIR="${SALT_DIR:-/srv/salt}"
DOTFILES="${SALT_DIR}/dotfiles"

force=false

while [ "$#" -gt 0 ]; do
   case $1 in
      -f|--force) force=true ;;
   esac
   shift
done

if [ -d "$SALT_DIR" ] && ! $force; then
   (>&2 echo 'Refusing to replace salt states without --force')
   exit 128
fi

rm -rf "$SALT_DIR"
mkdir --parents "${DOTFILES}"

echo "dotfiles"
echo "include:" > "${DOTFILES}/init.sls"

add_to_init() {
   echo "  $1"
   echo "  - .$1" >> "${DOTFILES}/init.sls"
}

# Copies the entire state directory ignoring files listed in .saltignore
statedir() {
   if [ -f "${1}/.saltignore" ]; then
      GLOBIGNORE=$(tr '\n' ':' < <(sed "s/.*/${1}\/&/" < "${1}/.saltignore"))
   else
      GLOBIGNORE=.
   fi
   cp --parents --recursive "$1"/* "${DOTFILES}"
   unset GLOBIGNORE
   add_to_init "$1"
}

# Copies an individual salt state file
statefile() {
   cp --parents "${1/\./\/}.sls" "${DOTFILES}"
   add_to_init "$1"
}

statedir portage
statedir awesome
statedir bash
statedir deluge
statedir firefox
statedir git
statedir gpg
statedir htop
statedir java
statedir pass
statedir salt
statedir smartcard
statedir ssh
statefile 'system.fonts'
statefile 'system.system'
statefile 'system.time'
statedir thunderbird
statedir tmux
statedir urxvt
statedir vim
statedir x11

cat > "${SALT_DIR}/top.sls" <<'EOF'
base:
  '*':
    - dotfiles
EOF
