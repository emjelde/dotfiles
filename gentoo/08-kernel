#!/bin/bash

set -o errexit -o nounset -o xtrace

cp --recursive "${SOURCE:-.}/kernel" "${GENTOO_MOUNT_POINT}/tmp/"
cp /dev/shm/initramfs.key "${GENTOO_MOUNT_POINT}/tmp/kernel/"
trap "rm --recursive \"${GENTOO_MOUNT_POINT}/tmp/kernel\"" EXIT

export LUKS_UUID="$(blkid -s UUID -o value "$LUKS_DEVICE")"
export ROOT_UUID="$(blkid -s UUID -o value "$ROOT_DEVICE")"

chroot "$GENTOO_MOUNT_POINT" /bin/bash <<'EOF'
set -o errexit -o nounset -o xtrace

# Prepare initramfs
emerge --quiet \
   sys-fs/btrfs-progs \
   sys-fs/cryptsetup \
   sys-fs/lvm2
rc-update add lvm boot

# Find GCC library path for extra libraries needed by cryptsetup
export LIBGCCPATH="/usr/lib/gcc/$(s=$(gcc-config -c); echo ${s%-*}/${s##*-})"

INITRAMFS_SOURCE=/usr/src/initramfs/initramfs.list
export INITRAMFS_DIR=$(dirname "$INITRAMFS_SOURCE")
mkdir --parents "$INITRAMFS_DIR"
envsubst '$INITRAMFS_DIR $LIBGCCPATH' < <(/tmp/kernel/initramfs.list) > "$INITRAMFS_SOURCE"
envsubst '$LUKS_UUID $ROOT_VOLUME_GROUP' < /tmp/kernel/initramfs.init > "${INITRAMFS_DIR}/init"
envsubst '$ROOT_UUID' < /tmp/kernel/initramfs.fstab > "${INITRAMFS_DIR}/fstab"
cp /tmp/kernel/initramfs.key "${INITRAMFS_DIR}/key"

# Apply custom kernel patches
mkdir --parents /etc/portage/patches/sys-kernel/gentoo-sources
cp /tmp/kernel/tuz.patch /etc/portage/patches/sys-kernel/gentoo-sources/

# Build kernel
emerge --quiet sys-kernel/gentoo-sources
cd /usr/src/linux

# Create new config with defaults
make --quiet defconfig

# Boot EFI Stub with initramfs

# General setup  --->
#     [*] Initial RAM filesystem and RAM disk (initramfs/initrd) support
#     ( ) Initramfs source file(s)
./scripts/config --enable blk_dev_initrd
./scripts/config --set-str initramfs_source "$INITRAMFS_SOURCE"

# Processor type and features  --->
#     [*] EFI runtime service support
#     [*]   EFI stub support
./scripts/config --enable efi
./scripts/config --enable efi_stub

# Filesystem

# File systems  --->
#     <*> Btrfs filesystem support
#     <*> FUSE (Filesystem in Userspace) support
./scripts/config --enable btrfs_fs
./scripts/config --enable fuse_fs

# Block device encryption

# Device Drivers  --->
#     [*] Multiple devices driver support (RAID and LVM)  --->
#         <*> Device mapper support
#         <*> Crypt target support
./scripts/config --enable md
./scripts/config --enable blk_dev_dm
./scripts/config --enable dm_crypt

# [*] Cryptographic API  --->
#     <*> XTS support
./scripts/config --enable crypto
./scripts/config --enable crypto_xts

# Update config setting new symbols to their default values without prompts
make --quiet olddefconfig

# Build kernel and install modules
make --quiet --jobs $CPUS
make --quiet modules_install

# Copy kernel to boot device
mkdir --parents /boot/efi/boot
cp arch/x86_64/boot/bzImage /boot/efi/boot/bootx64.efi
EOF
