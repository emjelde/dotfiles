#!/bin/bash

# Detect and optimize for system resources

set -uex

# Use cpuid2cpuflags utility to query a listing of CPU flags supported by the
# system's processor. The flags are used by Portage to optimize package builds
# in /etc/portage/make.conf.
#
# https://wiki.gentoo.org/wiki/CPU_FLAGS_X86
CPU_FLAGS=${CPU_FLAGS:=$(command -v cpuid2cpuflags >/dev/null 2>&1 && cpuid2cpuflags || true)}
# Remove label added by cpuid2cpuflags
CPU_FLAGS="${CPU_FLAGS##*CPU_FLAGS_X86: }"

# The number of virtual CPUs for the virtual machine. Also used in make.conf
# MAKEOPTS to set the number of simultaneous jobs.
#
# https://wiki.gentoo.org/wiki/MAKEOPTS
CPUS=${CPUS:=$(nproc --all)}

# The amount of RAM, in MB, that the virtual machine should allocate for itself
# from the host. Compilation can take up a lot of memory and more as the make
# jobs increase (See CPUS above).
MEMORY=${MEMORY:=$(echo "($CPUS * 1024 * 1.5) / 1" | bc)} # 1.5 GiB per CPU is an estimate

# The amount of RAM that the virtual graphics card should have.
# This is not used in the QEMU build.
VIDEO_MEMORY=${VIDEO_MEMORY:=128} # 128 MB is arbitrary

# If true the VirtualBox kernel module and guest additions will be installed
USE_VIRTUALBOX=$(
   if [[ -z ${ISO_BUILD_USE+x} || -z ${SALT_BUILD_USE+x} ||
         ("${ISO_BUILD_USE}" == *"virtualbox"* &&
         "${SALT_BUILD_USE}" == *"virtualbox"*) ]]; then
      echo 'true'
   else
      echo 'false'
   fi
)

# Write to a configuration file used by the gentoo/gentoo.json and
# salt/salt.json Packer scripts.
BUILD=build
cat << EOF > ${BUILD}/vm-variables.json
{
  "cpuflags": "${CPU_FLAGS}",
  "cpus": "${CPUS}",
  "memory": "${MEMORY}",
  "vram": "${VIDEO_MEMORY}",
  "use_virtualbox": "${USE_VIRTUALBOX}"
}
EOF
